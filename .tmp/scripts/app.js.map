{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["'use strict';\r\n\r\nvar app = angular\r\n  .module('ariseApp', [\r\n    'ngAnimate',\r\n    'ngResource',\r\n    'ngRoute',\r\n    'firebase',\r\n    'toaster',\r\n    'angularMoment',\r\n    'ngAnimate',\r\n    'ngMap',\r\n    'ngCordovaOauth'\r\n    //'uiGmapgoogle-maps'\r\n  ])\r\n  .constant('FURL', 'https://incandescent-torch-3403.firebaseio.com')\r\n    .config(function() {\r\n      // Initialize Firebase\r\n      var config = {\r\n        apiKey: \"AIzaSyA6Trl9aaibXQPAWdQ3VSLWt2bEJL1fFO0\",\r\n        authDomain: \"incandescent-torch-3403.firebaseapp.com\",\r\n        databaseURL: \"https://incandescent-torch-3403.firebaseio.com\",\r\n        storageBucket: \"incandescent-torch-3403.appspot.com\",\r\n        messagingSenderId: \"479569875105\"\r\n      };\r\n      firebase.initializeApp(config);\r\n    })\r\n  .constant('TaskStatus', {\r\n    OPEN: 'open',\r\n    COMPLETED: 'completed',\r\n    CANCELED: 'cancelled',\r\n    ASSIGNED: 'assigned'\r\n  })\r\n  .run(function($rootScope, $location) {\r\n    $rootScope.$on('$routeChangeError', function(event, next, previous, error) {\r\n      // We can catch the error thrown when the $requireAuth promise is rejected\r\n      // and redirect the user back to the login page\r\n      if (error === 'AUTH_REQUIRED') {\r\n        $location.path('/login');\r\n      }\r\n    });\r\n  })/*\r\n    .config(\r\n     function(uiGmapGoogleMapApiProvider) {\r\n       uiGmapGoogleMapApiProvider.configure({\r\n        china: true,\r\n         libraries: 'weather,geometry,visualization'\r\n      })\r\n    })*/\r\n  .config(function ($routeProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'views/dashboard.html',\r\n        controller: 'BrowseController',\r\n        resolve: {\r\n          currentAuth: function(Auth) {\r\n            return Auth.requireAuth();\r\n          }\r\n        }\r\n      })\r\n      .when('/callforhelp', {\r\n        templateUrl: 'views/partials/post.html',\r\n        controller: 'TaskController',\r\n        resolve: {\r\n          currentAuth: function(Auth) {\r\n            return Auth.requireAuth();\r\n          }\r\n        }\r\n      })\r\n      .when('/map', {\r\n        templateUrl: 'views/map.html',\r\n        controller: 'BrowseController'\r\n        // resolve: {\r\n        //   currentAuth: function(Auth) {\r\n        //     return Auth.requireAuth();\r\n        //   }\r\n        // }\r\n      })\r\n      .when('/_/:taskId?', {\r\n        templateUrl: 'views/map.html',\r\n        controller: 'BrowseController',\r\n        resolve: {\r\n          currentAuth: function(Auth) {\r\n            return Auth.requireAuth();\r\n          }\r\n        }\r\n      })\r\n      .when('/profile/:userId?', {\r\n        templateUrl: 'views/profile.html',\r\n        controller: 'BrowseController',\r\n        resolve: {\r\n          currentAuth: function(Auth) {\r\n            return Auth.requireAuth();\r\n          }\r\n        }\r\n      })\r\n      .when('/call/:taskId?', {\r\n        templateUrl: 'views/call.html',\r\n        controller: 'BrowseController',\r\n        resolve: {\r\n          currentAuth: function(Auth) {\r\n            return Auth.requireAuth();\r\n          }\r\n        }\r\n      })\r\n      .when('/register', {\r\n        templateUrl: 'views/register.html',\r\n        controller: 'AuthController'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: 'views/login.html',\r\n        controller: 'AuthController'\r\n      })\r\n      .when('/mycalls', {\r\n        templateUrl: 'views/dashboard.html',\r\n        routeKey: 'mycalls',\r\n        controller: 'BrowseController',\r\n        resolve: {\r\n          currentAuth: function(Auth) {\r\n            return Auth.requireAuth();\r\n          }\r\n        }\r\n      })\r\n      .otherwise({\r\n        redirectTo: '/login'\r\n      });\r\n  });\r\n\r\n  app.controller('ctrl', function($scope, $rootScope){\r\n  $rootScope.$on('$routeChangeStart', function(event, currRoute, prevRoute){\r\n  $rootScope.animation = currRoute.animation;\r\n  });\r\n});\r\n"],"file":"app.js"}