{"version":3,"names":[],"mappings":"","sources":["app.js"],"sourcesContent":["'use strict';\n\nvar app = angular\n  .module('ariseApp', [\n    'ngAnimate',\n    'ngResource',\n    'ngRoute',\n    'firebase',\n    'toaster',\n    'angularMoment',\n    'ngMap'\n    //'uiGmapgoogle-maps'\n  ])\n  .constant('FURL', 'https://arisedev.firebaseio.com')\n    .config(function() {\n      // Initialize Firebase\n      var config = {\n        apiKey: 'AIzaSyCKHDnn77sduHGIexjHiK9Fn2pFabgjPGM',\n        authDomain: 'arise.firebaseapp.com',\n        databaseURL: 'https://arise.firebaseio.com',\n        storageBucket: 'project-1206758082254347282.appspot.com',\n      };\n      firebase.initializeApp(config);\n    })\n  .constant('TaskStatus', {\n    OPEN: 'open',\n    COMPLETED: 'completed',\n    CANCELED: 'cancelled',\n    ASSIGNED: 'assigned'\n  })\n  .run(function($rootScope, $location) {\n    $rootScope.$on('$routeChangeError', function(event, next, previous, error) {\n      // We can catch the error thrown when the $requireAuth promise is rejected\n      // and redirect the user back to the login page\n      if (error === 'AUTH_REQUIRED') {\n        $location.path('/login');\n      }\n    });\n  })/*\n    .config(\n     function(uiGmapGoogleMapApiProvider) {\n       uiGmapGoogleMapApiProvider.configure({\n        china: true,\n         libraries: 'weather,geometry,visualization'\n      })\n    })*/\n  .config(function ($routeProvider) {\n    $routeProvider\n      .when('/', {\n        templateUrl: 'views/dashboard.html',\n        controller: 'BrowseController',\n        resolve: {\n          currentAuth: function(Auth) {\n            return Auth.requireAuth();\n          }\n        }\n      })\n      .when('/callforhelp', {\n        templateUrl: 'views/partials/post.html',\n        controller: 'TaskController',\n        resolve: {\n          currentAuth: function(Auth) {\n            return Auth.requireAuth();\n          }\n        }\n      })\n      .when('/map', {\n        templateUrl: 'views/map.html',\n        controller: 'BrowseController'\n        // resolve: {\n        //   currentAuth: function(Auth) {\n        //     return Auth.requireAuth();\n        //   }\n        // }\n      })\n      .when('/_/:taskId?', {\n        templateUrl: 'views/map.html',\n        controller: 'BrowseController',\n        resolve: {\n          currentAuth: function(Auth) {\n            return Auth.requireAuth();\n          }\n        }\n      })\n      .when('/profile/:userId?', {\n        templateUrl: 'views/profile.html',\n        controller: 'BrowseController',\n        resolve: {\n          currentAuth: function(Auth) {\n            return Auth.requireAuth();\n          }\n        }\n      })\n      .when('/call/:taskId?', {\n        templateUrl: 'views/call.html',\n        controller: 'BrowseController',\n        resolve: {\n          currentAuth: function(Auth) {\n            return Auth.requireAuth();\n          }\n        }\n      })\n      .when('/register', {\n        templateUrl: 'views/register.html',\n        controller: 'AuthController'\n      })\n      .when('/login', {\n        templateUrl: 'views/login.html',\n        controller: 'AuthController'\n      })\n      .when('/mycalls', {\n        templateUrl: 'views/dashboard.html',\n        routeKey: 'mycalls',\n        controller: 'BrowseController',\n        resolve: {\n          currentAuth: function(Auth) {\n            return Auth.requireAuth();\n          }\n        }\n      })\n      .otherwise({\n        redirectTo: '/login'\n      });\n  });\n"],"file":"app.js","sourceRoot":"/source/"}