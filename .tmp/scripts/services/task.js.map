{"version":3,"names":[],"mappings":"","sources":["services/task.js"],"sourcesContent":["'use strict';\n\napp.factory('Task', function(FURL, $firebase, Auth) {\n\tvar ref = new Firebase(FURL);\n\tvar tasks = $firebase(ref.child('tasks')).$asArray();\n\tvar user = Auth.user;\n\n\tvar Task = {\n\t\tall: tasks,\n\n\t\tgetTask: function(taskId) {\n\t\t\treturn $firebase(ref.child('tasks').child(taskId));\n\t\t},\n\n\t\tcreateTask: function(task) {\n\t\t\ttask.datetime = Firebase.ServerValue.TIMESTAMP;\n\t\t\treturn tasks.$add(task).then(function(newTask) {\n\n\t\t\t\t// Create User-Tasks lookup record for POSTER\n\t\t\t\tvar obj = {\n\t\t\t\t\ttaskId: newTask.key(),\n\t\t\t\t\ttype: true,\n\t\t\t\t\ttitle: task.title,\n\t\t\t\t\timg: task.img?task.img:'',\n\t\t\t\t\tdatetime: task.datetime\n\t\t\t\t};\n\n\t\t\t\treturn $firebase(ref.child('user_tasks').child(task.poster)).$push(obj);\n\t\t\t});\n\t\t},\n\n\t\tcreateUserTasks: function(taskId) {\n\t\t\tTask.getTask(taskId)\n\t\t\t\t.$asObject()\n\t\t\t\t.$loaded()\n\t\t\t\t.then(function(task) {\n\n\t\t\t\t\t// Create User-Tasks lookup record for RUNNER\n\t\t\t\t\tvar obj = {\n\t\t\t\t\t\ttaskId: taskId,\n\t\t\t\t\t\ttype: false,\n\t\t\t\t\t\ttitle: task.title,\n\t\t\t\t\t\tdatetime: task.datetime\n\t\t\t\t\t}\n\n\t\t\t\t\treturn $firebase(ref.child('user_tasks').child(task.runner)).$push(obj);\n\t\t\t\t});\n\t\t},\n\n\t\teditTask: function(task) {\n\t\t\tvar t = this.getTask(task.$id);\n\t\t\treturn t.$update({title: task.title, description: task.description});\n\t\t},\n\n\t\tcancelTask: function(taskId) {\n\t\t\tvar t = this.getTask(taskId);\n\t\t\treturn t.$update({status: 'cancelled'});\n\t\t},\n\n\t\tisCreator: function(task) {\n\t\t\treturn (user && user.provider && user.uid === task.poster);\n\t\t},\n\n\t\tisOpen: function(task) {\n\t\t\treturn task.status === 'open';\n\t\t},\n\n\t\t// --------------------------------------------------//\n\n\t\tisAssignee: function(task) {\n\t\t\treturn (user && user.provider && user.uid === task.runner);\n\t\t},\n\n\t\tcompleteTask: function(taskId) {\n\t\t\tvar t = this.getTask(taskId);\n\t\t\treturn t.$update({status: 'completed'});\n\t\t},\n\n\t\tisCompleted: function(task) {\n\t\t\treturn task.status === 'completed';\n\t\t}\n\t};\n\n\treturn Task;\n\n});\n"],"file":"services/task.js","sourceRoot":"/source/"}