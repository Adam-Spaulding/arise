{"version":3,"names":[],"mappings":"","sources":["controllers/browse.js"],"sourcesContent":["'use strict';\r\n\r\napp.controller('BrowseController', function($scope, $routeParams, toaster, Task, Auth, Comment, Offer, NgMap, ProfileService) {\r\n\t//uiGmapLogger.currentLevel = uiGmapLogger.LEVELS.debug;\r\n\t$scope.searchTask = '';\r\n\t$scope.mapPins = [];\r\n\t$scope.paths = [];\r\n\t$scope.tasks = [];\r\n\t$scope.editOn = false;\r\n\t//document.getElementById('commentPrwImg').style.display = 'none';\r\n\t$scope.polylines = [];\r\n\tif(sessionStorage.latLong){\r\n\t\tvar sessionedLatLong = JSON.parse(sessionStorage.getItem('latLong'));\r\n\t}\r\n\t// Set up map defaults etc.\r\n\t$scope.googleMapInstance = {};\r\n\t$scope.showImg = false;\r\n\t$scope.showImgOffer = false;\r\n\t$scope.commentImgSrc = '';\r\n\t$scope.offerImgSrc = '';\r\n\t//document.getElementById('commentPrwImg').style.display = 'none';\r\n\tvar lats = [];\r\n\tvar lngs = [];\r\n\tvar mapx;\r\n\tvar file;\r\n\t$scope.currentUserArr = [];\r\n\t$scope.userInfo = {};\r\n\tif(sessionStorage.latLong){\r\n\t\tvar sessionedLatLong = JSON.parse(sessionStorage.latLong)\r\n\t}\r\n\tvar clusterTypes = ['standard','ugly','beer'];\r\n\tvar selectedClusterTypes = {\r\n\t\tstandard:{\r\n\t\t\ttitle: 'Click to Zoom', gridSize: 60, ignoreHidden: true, minimumClusterSize: 2\r\n\t\t}\r\n\t};\r\n\t$scope.clusterProps = {\r\n\t\tdoClusterRandomMarkers: true,\r\n\t\tcurrentClusterType: 'standard',\r\n\t\tclusterTypes: clusterTypes,/*\r\n\t\tselectClusterType: selectClusterType,\r\n\t\tselectedClusterTypes: selectedClusterTypes,*/\r\n\t\tclusterOptions: selectedClusterTypes.standard\r\n\t}\r\n\t$scope.mapProperties = {\r\n\t\tvisible:true,\r\n\t\tstroke:{\r\n\t\t\tcolor: '#FF0066',\r\n\t\t\tweight: 3\r\n\t\t},\r\n\t\tgeodesic:false,\r\n\t\tstatic:true,\r\n\t\tfit:false,\r\n\t\teditable:true,\r\n\t\tdraggable:false\r\n\t};\r\n\t$scope.polylines.push($scope.mapProperties);\r\n\t/*fb storage*/\r\n\t//var storage = firebase.storage();\r\n\r\n\t$scope.userProfile = {};\r\n\t$scope.currentUserLocation = {};\r\n\t$scope.userId = $routeParams.userId;\r\n\t$scope.show = false;\r\n\t/*to get the current user lcoation*/\r\n\tvar latitudeLongObj = [];\r\n\r\n\tvar options = {\r\n\t\tenableHighAccuracy: true,\r\n\t\t//timeout: 1000,\r\n\t\tmaximumAge: 0\r\n\t};\r\n\r\n\tfunction error(err) {\r\n\t\tconsole.warn('ERROR(' + err.code + '): ' + err.message);\r\n\t};\r\n\r\n\tnavigator.geolocation.getCurrentPosition(function (pos) {\r\n\t\tvar crd = pos.coords;\r\n\t\tlatitudeLongObj.push(crd.latitude+'');\r\n\t\tlatitudeLongObj.push(crd.longitude+'');\r\n\t\t$scope.currentUserLocation['latlong'] = latitudeLongObj;\r\n\t\t$scope.currentUserLocation['idKey'] = $scope.mapPins.length;\r\n\t\t$scope.currentUserLocation['title'] = 'i\\'m here';\r\n\t\t$scope.currentUserLocation['help_type'] = 'Me';\r\n\t\t$scope.currentUserArr.push($scope.currentUserLocation);\r\n\t\tsessionStorage.latLong = JSON.stringify(latitudeLongObj)\r\n\t\t// console.log('Your current position is:');\r\n\t\t// console.log('Latitude : ' + crd.latitude);\r\n\t\t// console.log('Longitude: ' + crd.longitude);\r\n\t\t// console.log('More or less ' + crd.accuracy + ' meters.');\r\n\t}, error, options);\r\n/**/\r\n\tTask.all.$loaded(function (tasks) {\r\n\t\tvar taskOpen = [];\r\n\t\t$scope.tasks = tasks;\r\n\t\ttasks.map(function (d, i) {\r\n\t\t\tif(d.status == 'open'){\r\n\t\t\t\t$scope.mapPins.push(d)\r\n\t\t\t}\r\n\t\t})\r\n\t\t//$scope.tasks = tasks;\r\n\t\t/*$scope.dynMarkers = [];\r\n\r\n\t\tNgMap.getMap().then(function(map) {\r\n\t\t\tfor (var i = 0; i < $scope.tasks.length; i++) {\r\n\t\t\t\tvar latLng = new google.maps.LatLng($scope.tasks[i].pos);\r\n\t\t\t\t$scope.dynMarkers.push(new google.maps.Marker({position: latLng}));\r\n\t\t\t}\r\n\t\t\t$scope.markerClusterer = new MarkerClusterer(map, $scope.dynMarkers, {});\r\n\t\t})*/\r\n\t})\r\n\t/* async.waterfall([\r\n>>>>>>> Stashed changes\r\n     function(callback){\r\n\t\t Task.all.$loaded(function (tasks) {\r\n\t\t\t var taskOpen = [];\r\n\t\t\t\t $scope.tasks = tasks;\r\n\t\t\t var taskData = angular.copy(tasks);\r\n\t\t\t taskData.map(function (d, i) {\r\n\t\t\t\t if(d.status == 'open'){\r\n\t\t\t\t\t taskOpen.push(d)\r\n\t\t\t\t }\r\n\t\t\t })\r\n\t\t\t taskOpen.map(function(d,i){\r\n\t\t\t\t d.latlong = {};\r\n\t\t\t\t if(d.lat){\r\n\t\t\t\t\t d.latlong['latitude'] = d.lat;\r\n\t\t\t\t\t d.latlong['longitude'] = d.long;\r\n\t\t\t\t\t d.idKey = i;\r\n\t\t\t\t\t $scope.paths.push(d.latlong);\r\n\t\t\t\t }\r\n\t\t\t\t if(d.status != 'open'){\r\n\t\t\t\t\t taskData.splice(i,1)\r\n\t\t\t\t }\r\n\t\t\t });\r\n\t\t\t $scope.mapPins = taskOpen;\r\n\t\t\t $scope.polylines[0]['path'] = ($scope.paths);\r\n\t\t\t //console.log($scope.polylines);\r\n\t\t\t callback(null,'success')\r\n\t\t }, function (err) {\r\n\t\t\t callback('err',null)\r\n\t\t });\r\n     }\r\n ], function (err,result) {\r\n     console.log($scope.currentUserArr)\r\n });*/\r\n\r\n\r\n\r\n\t$scope.user = Auth.user;\r\n\t$scope.signedIn = Auth.signedIn;\r\n\r\n\t$scope.listMode = true;\r\n\r\n\tif($routeParams.taskId) {\r\n\t\tvar task = Task.getTask($routeParams.taskId).$asObject();\r\n\t\t$scope.listMode = false;\r\n\t\tsetSelectedTask(task);\r\n\t}\r\n\tif($routeParams.userId) {\r\n\t\t//console.log($routeParams.userId);\r\n\t\t Auth.getProfile($routeParams.userId).$loaded().then(function(x){\r\n\t\t\t $scope.userProfile = (x);\r\n\t\t\t $scope.userInfo.groups = $scope.userProfile.groups\r\n\t\t\t $scope.userInfo.website = $scope.userProfile.website\r\n\t\t\t $scope.userInfo.aboutMe = $scope.userProfile.aboutMe\r\n\r\n\t\t})\r\n\r\n\t}\r\n/*for mapping*/\r\n\tNgMap.getMap().then(function(map) {\r\n\t\t$scope.map = map;\r\n\t});\r\n\t$scope.handleMapPins = function (event, city) {\r\n\t\tconsole.log(city)\r\n\t\t$scope.selectedCity = city;\r\n\t\t$scope.map.showInfoWindow('myInfoWindow', this);\r\n\t};\r\n\r\n\t/**/\r\n\r\n\tfunction setSelectedTask(task) {\r\n\t\t$scope.selectedTask = task;\r\n\r\n\t\t// We check isTaskCreator only if user signedIn\r\n\t\t// so we don't have to check every time normal guests open the task\r\n\t\tif($scope.signedIn()) {\r\n\r\n\t\t\t// Check if the current login user has already made an offer for selected task\r\n\t\t\tOffer.isOfferred(task.$id).then(function(data) {\r\n\t\t\t\t$scope.alreadyOffered = data;\r\n\t\t\t});\r\n\r\n\t\t\t// Check if the current login user is the creator of selected task\r\n\t\t\t$scope.isTaskCreator = Task.isCreator;\r\n\r\n\t\t\t// Check if the selectedTask is open\r\n\t\t\t$scope.isOpen = Task.isOpen;\r\n\r\n\t\t\t// Unblock the Offer button on Offer modal\r\n\t\t\t// $scope.offer = {close: ''};\r\n\t\t\t$scope.block = false;\r\n\r\n\t\t\t// Check if the current login user is offer maker (to display Cancel Offer button)\r\n\t\t\t$scope.isOfferMaker = Offer.isMaker;\r\n\r\n\t\t\t// --------------------------------------------//\r\n\r\n\t\t\t// Check if the current user is assigned fot the selected task\r\n\t\t\t$scope.isAssignee = Task.isAssignee;\r\n\r\n\t\t\t// Check if the selectedTask is completed\r\n\t\t\t$scope.isCompleted = Task.isCompleted;\r\n\r\n\t\t\t// Reload current page\r\n\t\t\t// $window.location.reload();\r\n\r\n\t\t}\r\n\r\n\t\t// Get list of comments for the selected task\r\n\t\t$scope.comments = Comment.comments(task.$id);\r\n\r\n\t\t// Get list of offers for the selected task\r\n\t\t$scope.offers = Offer.offers(task.$id);\r\n\t};\r\n\r\n\t// --------------- TASK ---------------\r\n\r\n\t$scope.cancelTask = function(taskId) {\r\n\t\tTask.cancelTask(taskId).then(function() {\r\n\t\t\ttoaster.pop('success', 'Call for help deleted successfully.');\r\n\t\t\t$location.path('/browse');\r\n\t\t});\r\n\t};\r\n\r\n\t// --------------------------------------------//\r\n\r\n\t$scope.completeTask = function(taskId) {\r\n\t\tTask.completeTask(taskId).then(function() {\r\n\t\t\ttoaster.pop('success', 'Call for help completed. Good work!');\r\n\t\t});\r\n\t};\r\n\r\n\t// --------------- COMMENT ---------------\r\n\r\n\t$scope.addComment = function() {\r\n\t\tvar comment = {\r\n\t\t\tcontent: $scope.content,\r\n\t\t\tname: $scope.user.profile.name,\r\n\t\t\tgravatar: $scope.user.profile.gravatar\r\n\t\t};\r\n\t\tvar convoImgElement = document.getElementById('convoImg');\r\n\t\tif(convoImgElement.files.length>0){\r\n\t\t\tvar storageRef = firebase.storage().ref().child($scope.user.uid);\r\n\t\t\t// Get a reference to store file at photos/<FILENAME>.jpg\r\n\t\t\tvar photoRef = storageRef.child(file.name);\r\n\t\t\t// Upload file to Firebase Storage\r\n\t\t\tvar uploadTask = photoRef.put(file);\r\n\t\t\tuploadTask.on('state_changed', null, null, function(snapshot) {\r\n\t\t\t\tconsole.log('success')\r\n\t\t\t\tconsole.log(snapshot)\r\n\t\t\t\t// When the image has successfully uploaded, we get its download URL\r\n\t\t\t\tvar downloadUrl = uploadTask.snapshot.downloadURL;\r\n\t\t\t\tcomment.img = downloadUrl;\r\n\t\t\t\tComment.addComment($scope.selectedTask.$id, comment).then(function() {\r\n\t\t\t\t\t$scope.content = '';\r\n\t\t\t\t\tdocument.getElementById('commentPrwImg').src = '';\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tComment.addComment($scope.selectedTask.$id, comment).then(function() {\r\n\t\t\t\t$scope.content = '';\r\n\t\t\t})\r\n\t\t}\r\n\t\t/*var comment = {\r\n\t\t\tcontent: $scope.content,\r\n\t\t\tname: $scope.user.profile.name,\r\n\t\t\tgravatar: $scope.user.profile.gravatar\r\n\t\t};\r\n\t\tComment.addComment($scope.selectedTask.$id, comment).then(function() {\r\n\t\t\t$scope.content = '';\r\n\t\t});*/\r\n\t};\r\n\r\n\t// --------------- OFFER ---------------\r\n\r\n\t$scope.previewImage = function (that, type) {\r\n\t\tvar imgId = '';\r\n\t\tvar prwImgId = '';\r\n\t\tif (type == 'offer') {\r\n\t\t\timgId = 'imgupload';\r\n\t\t\tprwImgId = 'offerimg';\r\n\t\t} else if (type == 'post') {\r\n\t\t\timgId = 'helpImg';\r\n\t\t\tprwImgId = 'postimg';\r\n\t\t} else if (type == 'comment') {\r\n\t\t\timgId = 'convoImg';\r\n\t\t\tprwImgId = 'commentPrwImg';\r\n\t\t}\r\n\t\tconsole.log('change occured');\r\n\t\tvar imgechge = document.getElementById(imgId);\r\n\t\tfile = imgechge.files[0];\r\n\t\thandleFileSelect(imgechge, function (data) {\r\n\t\t\tif (type == 'offer') {\r\n\t\t\t\t$scope.showImgOffer = true;\r\n\t\t\t\t$scope.offerImgSrc = data;\r\n\t\t\t} else if (type == 'comment') {\r\n\t\t\t\t$scope.showImg = true;\r\n\t\t\t\t$scope.commentImgSrc = data;\r\n\t\t\t}\r\n\r\n\t\t\t//document.getElementById('commentPrwImg').style.display = 'block';\r\n\t\t\t//document.getElementById(prwImgId).src = data;\r\n\t\t})\r\n\t};\r\n\r\n\t$scope.makeOffer = function(element) {\r\n\t\tvar offer = {\r\n\t\t\ttotal: $scope.total,\r\n\t\t\tuid: $scope.user.uid,\r\n\t\t\tname: $scope.user.profile.name,\r\n\t\t\tgravatar: $scope.user.profile.gravatar\r\n\t\t};\r\n\t\tvar imgelement = document.getElementById('imgupload');\r\n\t\tif(imgelement.files.length>0){\r\n\t\t\tvar storageRef = firebase.storage().ref().child($scope.user.uid);\r\n\t\t\t// Get a reference to store file at photos/<FILENAME>.jpg\r\n\t\t\tvar photoRef = storageRef.child(file.name);\r\n\t\t\t// Upload file to Firebase Storage\r\n\t\t\tvar uploadTask = photoRef.put(file);\r\n\t\t\tuploadTask.on('state_changed', null, null, function(snapshot) {\r\n\t\t\t\tconsole.log('success')\r\n\t\t\t\tconsole.log(snapshot)\r\n\t\t\t\t// When the image has successfully uploaded, we get its download URL\r\n\t\t\t\tvar downloadUrl = uploadTask.snapshot.downloadURL;\r\n\t\t\t\toffer.img = downloadUrl;\r\n\t\t\t\tOffer.makeOffer($scope.selectedTask.$id, offer).then(function() {\r\n\t\t\t\t\ttoaster.pop('success', 'Your offer has been placed.');\r\n\t\t\t\t\tdocument.getElementById('offerimg').src = '';\r\n\r\n\t\t\t\t\t// Mark that the current user has offerred for this task.\r\n\t\t\t\t\t$scope.alreadyOffered = true;\r\n\r\n\t\t\t\t\t// Reset offer form\r\n\t\t\t\t\t$scope.total = true;\r\n\r\n\t\t\t\t\t// Disable the \"Offer Now\" button on the modal\r\n\t\t\t\t\t$scope.block = true;\r\n\t\t\t\t\t$('#offModal').modal('hide');\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t/*\r\n\t\t\thandleFileSelect(imgelement, function (data) {\r\n\t\t\t\tdocument.getElementById('offerimg').src = data;\r\n\t\t\t\toffer.img = data;\r\n\t\t\t\tOffer.makeOffer($scope.selectedTask.$id, offer).then(function() {\r\n\t\t\t\t\ttoaster.pop('success', 'Your offer has been placed.');\r\n\r\n\t\t\t\t\t// Mark that the current user has offerred for this task.\r\n\t\t\t\t\t$scope.alreadyOffered = true;\r\n\t\t\t\r\n\t\t\t\t\t// Reset offer form\r\n\t\t\t\t\t$scope.total = true;\r\n\r\n\t\t\t\t\t// Disable the \"Offer Now\" button on the modal\r\n\t\t\t\t\t$scope.block = true;\r\n\t\t\t\t\t$('#offModal').modal('hide');\r\n\t\t\t\t});\r\n\t\t\t})*/\r\n\t\t}else{\r\n\t\t\tOffer.makeOffer($scope.selectedTask.$id, offer).then(function() {\r\n\t\t\t\ttoaster.pop('success', 'Your offer has been placed.');\r\n\r\n\t\t\t\t// Mark that the current user has offerred for this task.\r\n\t\t\t\t$scope.alreadyOffered = true;\r\n\r\n\t\t\t\t// Reset offer form\r\n\t\t\t\t$scope.total = true;\r\n\r\n\t\t\t\t// Disable the \"Offer Now\" button on the modal\r\n\t\t\t\t$scope.block = true;\r\n\t\t\t\t$('#offModal').modal('hide');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\r\n\t};\r\n\r\n\t$scope.cancelOffer = function(offerId) {\r\n\t\tOffer.cancelOffer($scope.selectedTask.$id, offerId).then(function() {\r\n\t\t\ttoaster.pop('success', 'Your offer has been cancelled.');\r\n\r\n\t\t\t// Mark that the current user has cancelled offer for this task.\r\n\t\t\t$scope.alreadyOffered = false;\r\n\r\n\t\t\t// Unblock the Offer button on Offer modal\r\n\t\t\t$scope.block = false;\r\n\t\t});\r\n\t};\r\n\r\n\t// --------------------------------------------//\r\n\r\n\t$scope.acceptOffer = function(offerId, runnerId) {\r\n\t\tOffer.acceptOffer($scope.selectedTask.$id, offerId, runnerId).then(function() {\r\n\t\t\ttoaster.pop('success', 'Call has been accepted!');\r\n\r\n\t\t\t//Mark that this Task has been assigned\r\n\t\t\t$scope.isAssigned = true;\r\n\r\n\t\t\t// Notify assignee\r\n\t\t\tOffer.notifyRunner($scope.selectedTask.$id, runnerId);\r\n\t\t});\r\n\t};\r\n\r\n\t//----------------PROFILE-----------------------------------//\r\n\t$scope.groupOptions = [{name: 'Group A',id:0},{name: 'Group B',id:1},{name: 'Group C',id:2},{name: 'Group D',id:3},{name: 'Group E',id:4}];\r\n\t$scope.addInfoToProfile = function (user) {\r\n\t\tconsole.log(user, $routeParams.userId,$scope.user.auth.uid == $routeParams.userId)\r\n\t\tProfileService.addUserInfo($routeParams.userId,user).then(function() {\r\n\t\t\ttoaster.pop('success', 'Your profile has been updated.');\r\n\t\t\t$scope.editOn = false;\r\n\t\t})\r\n\t}\r\n\t$scope.editMode = function(){\r\n\t\t$scope.editOn = true;\r\n\t}\r\n\r\n\t/*--------------RATING---------------------------------------*/\r\n\t$scope.rating = 2;\r\n\t$scope.isReadonly = true;\r\n\t$scope.rateFunction = function(rating) {\r\n\t\tconsole.log('Rating selected: ' + rating);\r\n\t};\r\n})\r\n\t.directive('starRating', function () {\r\n\t\treturn {\r\n\t\t\trestrict: 'EA',\r\n\t\t\ttemplate:\r\n\t\t\t'<ul class=\"star-rating\" ng-class=\"{readonly: readonly}\">' +\r\n\t\t\t'  <li ng-repeat=\"star in stars\" class=\"star\" ng-class=\"{filled: star.filled}\" ng-click=\"toggle($index)\">' +\r\n\t\t\t'    <i class=\"fa fa-star\"></i>' + // or &#9733\r\n\t\t\t'  </li>' +\r\n\t\t\t'</ul>',\r\n\t\t\tscope: {\r\n\t\t\t\tratingValue: '=ngModel',\r\n\t\t\t\tmax: '=?', // optional (default is 5)\r\n\t\t\t\tonRatingSelect: '&?',\r\n\t\t\t\treadonly: '=?'\r\n\t\t\t},\r\n\t\t\tlink: function(scope, element, attributes) {\r\n\t\t\t\tif (scope.max == undefined) {\r\n\t\t\t\t\tscope.max = 5;\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateStars() {\r\n\t\t\t\t\tscope.stars = [];\r\n\t\t\t\t\tfor (var i = 0; i < scope.max; i++) {\r\n\t\t\t\t\t\tscope.stars.push({\r\n\t\t\t\t\t\t\tfilled: i < scope.ratingValue\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tscope.toggle = function(index) {\r\n\t\t\t\t\tif (scope.readonly == undefined || scope.readonly === false){\r\n\t\t\t\t\t\tscope.ratingValue = index + 1;\r\n\t\t\t\t\t\tscope.onRatingSelect({\r\n\t\t\t\t\t\t\trating: index + 1\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t\tscope.$watch('ratingValue', function(oldValue, newValue) {\r\n\t\t\t\t\tif (newValue) {\r\n\t\t\t\t\t\tupdateStars();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t});\r\n"],"file":"browse.js"}